name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      # Linux-only native deps for packaging (safe no-ops elsewhere)
      - name: Install Linux build dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y rpm libudev-dev

      # If you need env for code-signing, export from secrets here (APPLE/WIN).
      # env:
      #   CSC_LINK: ${{ secrets.CSC_LINK }}
      #   CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
      #   APPLE_ID: ${{ secrets.APPLE_ID }}
      #   APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}

      # Build your bundles first (rollup) if your scripts expect it.
      # If your `dist:*` scripts already do this, you can remove this step.
      - name: Build renderer/library (rollup)
        run: npm run build

      - name: Package app
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            npm run dist:linux
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            npm run dist:win
          else
            npm run dist:mac
          fi
        shell: bash

      - name: Generate checksums
        run: |
          cd release
          shopt -s nullglob
          for f in *; do
            if [ -f "$f" ]; then
              sha256sum "$f" >> SHA256SUMS.txt
            fi
          done
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-artifacts
          path: release/*

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create draft release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          generate_release_notes: true
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
